(define
	(# Rasterizer Settings)
	(variable resolution 4)
	(variable edgeculling 0) (# 0: false, 1: true)
	(# Temporary Variables)
	(variable topX)
	(variable topY)
	(variable botX)
	(variable botY)
	(variable startX)
	(variable startY)
	(variable endX)
	(variable endY)
	(variable midState 0) (# 0: undefined, 1: left, 2: right)
	(variable midX)
	(variable midY)
	(variable offset) (# Offset of end of row)
)
(function drawTriangle (Draw triangle made of the points (number ax) (number ay) , (number bx) (number by) , and (number cx) (number cy) )
	(# Edge Culling)
	(if
      (not
        (and
          (= (variable edgeculling) 1)
          (> 0
            (-
              (*
                (- (argument bx) (argument ax) )
                (- (argument cy) (argument ay) )
              )
              (*
                (- (argument by) (argument ay) )
                (- (argument cx) (argument ax) )
              )
            )
          )
        )
      )
		(set topX (argument ax) )
		(set topY (argument ay) )
		(if (or (> (argument by) (variable topY) ) (and (= (argument by) (variable topY) ) (< (argument bx) (variable topX) ) ) )
			(set topX (argument bx) )
			(set topY (argument by) )
		)
		(if (or (> (argument cy) (variable topY) ) (and (= (argument cy) (variable topY) ) (< (argument cx) (variable topX) ) ) )
			(set topX (argument cx) )
			(set topY (argument cy) )
		)
		(set botX (argument ax) )
		(set botY (argument ay) )
		(if (or (< (argument by) (variable botY) ) (and (= (argument by) (variable botY) ) (< (argument bx) (variable botX) ) ) )
			(set botX (argument bx) )
			(set botY (argument by) )
		)
		(if (or (< (argument cy) (variable botY) ) (and (= (argument cy) (variable botY) ) (< (argument cx) (variable botX) ) ) )
			(set botX (argument cx) )
			(set botY (argument cy) )
		)
		(set midState 0)
		(if (or (and (not (= (argument ax) (variable topX) ) ) (not (= (argument ax) (variable botX) ) ) ) (and (not (= (argument ay) (variable topY) ) ) (not (= (argument ay) (variable botY) ) ) ) )
			(set midState 1)
			(set midX (argument ax) )
			(set midY (argument ay) )
		)
		(elif (or (and (not (= (argument bx) (variable topX) ) ) (not (= (argument bx) (variable botX) ) ) ) (and (not (= (argument by) (variable topY) ) ) (not (= (argument by) (variable botY) ) ) ) )
			(set midState 1)
			(set midX (argument bx) )
			(set midY (argument by) )
		)
		(elif (or (and (not (= (argument cx) (variable topX) ) ) (not (= (argument cx) (variable botX) ) ) ) (and (not (= (argument cy) (variable topY) ) ) (not (= (argument cy) (variable botY) ) ) ) )
			(set midState 1)
			(set midX (argument cx) )
			(set midY (argument cy) )
		)
		(# Determine Side)
		(if (and (not (= (variable midState) 0) ) (> (variable midX) (+ (variable topX) (* (/ (- (variable botX) (variable topX) ) (- (variable botY) (variable topY) ) ) (- (variable midY) (variable topY) ) ) ) ) )
			(set midState 2)
		)
		(# Draw Pixels)
		(pen_set size (variable resolution) )
		(pen_color #000000) (# Default Color)
		(set_y (variable botY) )
		(repeat_until (not (< (value y) (variable topY) ) )
			(# Calculate Offset)
			(set startX (variable botX) )
			(set startY (variable botY) )
			(set endX (variable topX) )
			(set endY (variable topY) )
			(if (= (variable midState) 1)
				(if (> (value y) (variable midY) )
					(set startX (variable midX) )
					(set startY (variable midY) )
				)
				(else
					(set endX (variable midX) )
					(set endY (variable midY) )
				)
			)
			(set_x (math ceiling (+
				(variable startX)
				(*
					(/
						(- (variable endX) (variable startX) )
						(- (variable endY) (variable startY) )
					)
					(- (value y) (variable startY) )
				)
			) ) )
			(set startX (variable botX) )
			(set startY (variable botY) )
			(set endX (variable topX) )
			(set endY (variable topY) )
			(if (= (variable midState) 2)
				(if (> (value y) (variable midY) )
					(set startX (variable midX) )
					(set startY (variable midY) )
				)
				(else
					(set endX (variable midX) )
					(set endY (variable midY) )
				)
			)
			(set offset (math floor (+
				(variable startX)
				(*
					(/
						(- (variable endX) (variable startX) )
						(- (variable endY) (variable startY) )
					)
					(- (value y) (variable startY) )
				)
			) ) )
			(# Paint Row)
			(repeat_until (not (< (value x) (variable offset) ) )
				(call fragmentShader (value x) (value y) (argument ax) (argument ay) (argument bx) (argument by) (argument cx) (argument cy) )
				(pen_down)
				(pen_up)
				(change_x (variable resolution) )
			)
			(change_y (variable resolution) )
		)
	)
)
